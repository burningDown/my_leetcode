class Solution {
public:
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        return ((p1[0] - p2[0] != 0 || p1[1] - p2[1] != 0) && (p1[0] - p3[0] != 0 || p1[1] - p3[1] != 0) && (p1[0] - p4[0] != 0 || p1[1] - p4[1] != 0) && (p2[0] - p3[0] != 0 || p2[1] - p3[1] != 0) && (p2[0] - p4[0] != 0 || p2[1] - p4[1] != 0) && (p3[0] - p4[0] != 0 || p3[1] - p4[1] != 0)) && ((long(p1[0])-p2[0])*(long(p1[0]) - p3[0]) + (long(p1[1])-p2[1])*(long(p1[1]) - p3[1]) == 0 && (long(p4[0])-p2[0])*(long(p4[0]) - p3[0]) + (long(p4[1])-p2[1])*(long(p4[1]) - p3[1]) == 0 && (long(p1[0])-p4[0])*(long(p2[0]) - p3[0]) + (long(p1[1])-p4[1])*(long(p2[1]) - p3[1]) == 0 || (long(p1[0])-p2[0])*(long(p1[0]) - p4[0]) + (long(p1[1])-p2[1])*(long(p1[1]) - p4[1]) == 0 && (long(p3[0])-p2[0])*(long(p3[0]) - p4[0]) + (long(p3[1])-p2[1])*(long(p3[1]) - p4[1]) == 0 && (long(p1[0])-p3[0])*(long(p2[0]) - p4[0]) + (long(p1[1])-p3[1])*(long(p2[1]) - p4[1]) == 0 || (long(p1[0])-p4[0])*(long(p1[0]) - p3[0]) + (long(p1[1])-p4[1])*(long(p1[1]) - p3[1]) == 0 && (long(p2[0])-p4[0])*(long(p2[0]) - p3[0]) + (long(p2[1])-p4[1])*(long(p2[1]) - p3[1]) == 0 && (long(p1[0])-p2[0])*(long(p3[0]) - p4[0]) + (long(p1[1])-p2[1])*(long(p3[1]) - p4[1]) == 0);
    }
};